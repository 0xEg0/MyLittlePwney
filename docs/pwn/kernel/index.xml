<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Kernel/ on MyLittlePwney</title>
    <link>http://my.littlepwney.fr/pwn/kernel/</link>
    <description>Recent content in Kernel/ on MyLittlePwney</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Wed, 21 Feb 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://my.littlepwney.fr/pwn/kernel/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Buffer Overflow Basic</title>
      <link>http://my.littlepwney.fr/pwn/kernel/attacks/buffer-overflow-basic/</link>
      <pubDate>Wed, 21 Feb 2024 00:00:00 +0000</pubDate>
      <guid>http://my.littlepwney.fr/pwn/kernel/attacks/buffer-overflow-basic/</guid>
      <description>OverviewTout comme pour une exploitation de BoF en user-land, notre objectif va √™tre d&amp;rsquo;overwrite la return address de la fonction vuln√©rable pour prendre le contr√¥le du flow d&amp;rsquo;ex√©cution. On se place ici dans le cas o√π aucune protection n&amp;rsquo;est pr√©sente au niveau du kernel.&#xA;DetailNotre objectif lors de l&amp;rsquo;exploitation d&amp;rsquo;un buffer overflow en kernel-land est de r√©ussir a ex√©cuter du code user-land tout en profitant de l&amp;rsquo;ex√©cution de code kernel-land pour √©lever nos privil√®ges.</description>
    </item>
    <item>
      <title>ü™ú Kernel Privesc ü™ú</title>
      <link>http://my.littlepwney.fr/pwn/kernel/kernel-privesc/</link>
      <pubDate>Mon, 19 Feb 2024 00:00:00 +0000</pubDate>
      <guid>http://my.littlepwney.fr/pwn/kernel/kernel-privesc/</guid>
      <description>OverviewL&amp;rsquo;objectif de ce post est d&amp;rsquo;aborder la couche d&amp;rsquo;abstraction n√©c√©ssaire √† la compr√©hension du pwn kernel. Pour cela, il est n√©c√©ssaire de comprendre comment les diff√©rents process interagissent avec le kernel, et comment un contr√¥le de flow d&amp;rsquo;execution en kernel-mode peut nous permettre d&amp;rsquo;am√©liorer nos privil√®ges en user-land.&#xA;Process x KernelIl est important de noter que l&amp;rsquo;on interagit avec le kernel de pleins de mani√®res diff√©rentes. Que ce soit en modifiant le filesystem, avec des syscalls, en communiquant avec des devices&amp;hellip; Toutes ces actions n√©c√©ssitent une intervention du kernel au niveau des process qui les initient.</description>
    </item>
  </channel>
</rss>
