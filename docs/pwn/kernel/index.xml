<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Kernel/ on MyLittlePwney</title>
    <link>https://0xeg0.github.io/MyLittlePwney/pwn/kernel/</link>
    <description>Recent content in Kernel/ on MyLittlePwney</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 19 Feb 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://0xeg0.github.io/MyLittlePwney/pwn/kernel/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>ü™ú Kernel Privesc ü™ú</title>
      <link>https://0xeg0.github.io/MyLittlePwney/pwn/kernel/kernel-privesc/</link>
      <pubDate>Mon, 19 Feb 2024 00:00:00 +0000</pubDate>
      <guid>https://0xeg0.github.io/MyLittlePwney/pwn/kernel/kernel-privesc/</guid>
      <description>OverviewL&amp;rsquo;objectif de ce post est d&amp;rsquo;aborder la couche d&amp;rsquo;abstraction n√©c√©ssaire √† la compr√©hension du pwn kernel. Pour cela, il est n√©c√©ssaire de comprendre comment les diff√©rents process interagissent avec le kernel, et comment un contr√¥le de flow d&amp;rsquo;execution en kernel-mode peut nous permettre d&amp;rsquo;am√©liorer nos privil√®ges en user-land.&#xA;Process x KernelIl est important de noter que l&amp;rsquo;on interagit avec le kernel de pleins de mani√®res diff√©rentes. Que ce soit en modifiant le filesystem, avec des syscalls, en communiquant avec des devices&amp;hellip; Toutes ces actions n√©c√©ssitent une intervention du kernel au niveau des process qui les initient.</description>
    </item>
  </channel>
</rss>
