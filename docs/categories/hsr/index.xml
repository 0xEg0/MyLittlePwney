<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>HSR - Category - MyLittlePwney</title>
    <link>http://my.littlepwney.fr/categories/hsr/</link>
    <description>HSR - Category | MyLittlePwney</description>
    <generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Mon, 01 Apr 2024 00:00:00 &#43;0000</lastBuildDate><atom:link href="http://my.littlepwney.fr/categories/hsr/" rel="self" type="application/rss+xml" /><item>
  <title>Chiffrement de Beaufort -  HSR 2024</title>
  <link>http://my.littlepwney.fr/writeups/hacksecureims/chiffrement_de_beaufort/</link>
  <pubDate>Mon, 01 Apr 2024 00:00:00 &#43;0000</pubDate>
  <author>Author</author>
  <guid>http://my.littlepwney.fr/writeups/hacksecureims/chiffrement_de_beaufort/</guid>
  <description><![CDATA[Binary AnalysisPour analyser le binaire, on va commencer par l&rsquo;ouvrir avec un décompilo, comme Binja. Le binaire n&rsquo;étant pas strippé, on peut s&rsquo;aider des symboles pour deviner ce que fait chaque fonction. A part la fonction backdoor() qui aspire à servir de fonction win(), le nom des fonctions ne nous apporte rien d&rsquo;intéressant. Regardons un peu plus en détail ce que fait le programme.
Main()Tout d&rsquo;abord, la fonction main() va lire l&rsquo;entrée standard à 2 reprises, attendant de l&rsquo;utilisateur qu&rsquo;il envoie une chaine de maximum 0x64 caractères.]]></description>
</item>
<item>
  <title>HackSecuReims/</title>
  <link>http://my.littlepwney.fr/writeups/hacksecureims/</link>
  <pubDate>Mon, 01 Apr 2024 00:00:00 &#43;0000</pubDate>
  <author>Author</author>
  <guid>http://my.littlepwney.fr/writeups/hacksecureims/</guid>
  <description><![CDATA[fa-solid fa-skull-crossbones]]></description>
</item>
</channel>
</rss>
